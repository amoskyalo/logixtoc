'use client';

import { DataGrid, DataGridToolbar, DataGridEditNDelete } from '@/components/DataGrids';
import { GridColDef } from '@mui/x-data-grid';
import { StatusChips } from '@/components/Chips';
import { DeliveryPlan } from '@/api';
import { getIndexedRows } from '@/utils';
import { TablesPropsInterface } from '@/Types';

const PlanningGrid = ({ rows, isLoading, dates, setDates }: TablesPropsInterface<DeliveryPlan>) => {
   const columns: GridColDef[] = [
      {
         field: 'id',
         headerName: 'No.',
         width: 50,
         sortable: false,
      },
      {
         field: 'DeliveryPlanNO',
         headerName: 'Delivery Plan NO.',
         width: 150,
      },
      {
         field: 'SourceVendorLocationName',
         headerName: 'Source Location',
         width: 150,
      },
      {
         field: 'VendorLocationName',
         headerName: 'Location',
         width: 150,
      },
      {
         field: 'DriverName',
         headerName: 'Driver Name',
         width: 150,
      },
      {
         field: 'DeliveryPlanTypeName',
         headerName: 'Delivery Plan Type',
         width: 150,
      },
      {
         field: 'GeneratedBy',
         headerName: 'Generated By',
         width: 150,
      },
      {
         field: 'DeliveryPlanStatusName',
         headerName: 'Status',
         width: 150,
         renderCell: ({ row: { DeliveryPlanStatusName, DeliveryPlanStatusID } }) => {
            return <StatusChips name={DeliveryPlanStatusName} statusID={DeliveryPlanStatusID} />;
         },
      },
      {
         field: 'Actions',
         headerName: 'Actions',
         type: 'actions',
         getActions: () => {
            return [<DataGridEditNDelete key="actions" />];
         },
      },
   ];

   const toolbar = () => <DataGridToolbar dates={dates} setDates={setDates} onAdd={() => null} />;

   return (
      <DataGrid
         checkboxSelection
         columns={columns}
         rows={getIndexedRows(rows)}
         loading={isLoading}
         getRowId={(row) => row.id}
         slots={{ toolbar }}
      />
   );
};

export default PlanningGrid;
